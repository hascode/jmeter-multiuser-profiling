<domain log-root="${com.sun.aas.instanceRoot}/logs"
	application-root="${com.sun.aas.instanceRoot}/applications" version="5">
	<system-applications>
		<application context-root=""
			location="${com.sun.aas.installRootURI}/lib/install/applications/__admingui"
			name="__admingui" directory-deployed="true" object-type="system-admin">
			<module name="__admingui">
				<engine sniffer="web"></engine>
				<engine sniffer="security"></engine>
			</module>
		</application>
	</system-applications>
	<applications></applications>
	<resources>
		<jdbc-connection-pool res-type="javax.sql.DataSource"
			datasource-classname="org.h2.jdbcx.JdbcDataSource"
			pool-resize-quantity="1" max-pool-size="5" steady-pool-size="1"
			statement-timeout-in-seconds="60" name="h2Pool">
			<property name="driverClass" value="org.h2.Driver" />
			<property name="URL" value="jdbc:h2:mem:hascode-h2-db;MVCC=TRUE;LOCK_TIMEOUT=10000;AUTO_RECONNECT=TRUE;DB_CLOSE_DELAY=-1"/>
			<property name="User" value="" />
			<property name="Password" value="" />
		</jdbc-connection-pool>
		<jdbc-resource object-type="system-all" enabled="true" jndi-name="jdbc/hascode_test_db" pool-name="h2Pool" />
	</resources>
	<servers>
		<server name="server" config-ref="server-config">
			<application-ref ref="__admingui" virtual-servers="__asadmin"></application-ref>
			<resource-ref ref="jdbc/__default"></resource-ref>
			<resource-ref ref="jdbc/hascode_test_db"></resource-ref>
		</server>
	</servers>
	<nodes>
		<node node-host="localhost" name="localhost-hascode" type="CONFIG"
			install-dir="${com.sun.aas.productRoot}"></node>
	</nodes>
	<configs>
		<config name="server-config">
			<http-service>
				<access-log></access-log>
				<virtual-server id="server" network-listeners="http-listener-1,http-listener-2"></virtual-server>
				<virtual-server id="__asadmin" network-listeners="admin-listener"></virtual-server>
			</http-service>
			<iiop-service>
				<orb use-thread-pool-ids="thread-pool-1"></orb>
				<iiop-listener port="3700" id="orb-listener-1"
					address="0.0.0.0" lazy-init="true"></iiop-listener>
				<iiop-listener port="3820" id="SSL" address="0.0.0.0"
					security-enabled="true">
					<ssl classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl"
						cert-nickname="s1as"></ssl>
				</iiop-listener>
				<iiop-listener port="3920" id="SSL_MUTUALAUTH"
					address="0.0.0.0" security-enabled="true">
					<ssl classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl"
						cert-nickname="s1as" client-auth-enabled="true"></ssl>
				</iiop-listener>
			</iiop-service>
			<admin-service system-jmx-connector-name="system"
				type="das-and-server">
				<jmx-connector port="8686" address="0.0.0.0"
					security-enabled="false" auth-realm-name="admin-realm" name="system"></jmx-connector>
				<property name="adminConsoleContextRoot" value="/admin"></property>
				<property name="adminConsoleDownloadLocation"
					value="${com.sun.aas.installRoot}/lib/install/applications/admingui.war"></property>
				<property name="ipsRoot" value="${com.sun.aas.installRoot}/.."></property>
				<das-config></das-config>
			</admin-service>
			<connector-service></connector-service>
			<web-container>
				<session-config>
					<session-manager>
						<manager-properties></manager-properties>
						<store-properties></store-properties>
					</session-manager>
					<session-properties></session-properties>
				</session-config>
			</web-container>
			<ejb-container session-store="${com.sun.aas.instanceRoot}/session-store">
				<ejb-timer-service></ejb-timer-service>
			</ejb-container>
			<mdb-container></mdb-container>
			<jms-service default-jms-host="default_JMS_host">
				<jms-host host="localhost" name="default_JMS_host"></jms-host>
			</jms-service>
			<security-service default-realm="jdbcRealm"
				activate-default-principal-to-role-mapping="true">
				<auth-realm name="jdbcRealm"
					classname="com.sun.enterprise.security.auth.realm.jdbc.JDBCRealm">
					<property name="digest-algorithm" value="NONE"></property>
					<property name="user-name-column" value="userid"></property>
					<property name="password-column" value="password"></property>
					<property name="group-name-column" value="groupid"></property>
					<property name="group-table" value="users_groups"></property>
					<property name="user-table" value="users"></property>
					<property name="datasource-jndi" value="jdbc/hascode_test_db"></property>
					<property name="jaas-context" value="jdbcRealm"></property>
					<property name="group-table-user-name-column" value="userid"></property>
				</auth-realm>
				<jacc-provider policy-provider="com.sun.enterprise.security.provider.PolicyWrapper"
					name="default"
					policy-configuration-factory-provider="com.sun.enterprise.security.provider.PolicyConfigurationFactoryImpl">
					<property name="repository"
						value="${com.sun.aas.instanceRoot}/generated/policy"></property>
				</jacc-provider>
				<jacc-provider
					policy-provider="com.sun.enterprise.security.jacc.provider.SimplePolicyProvider"
					name="simple"
					policy-configuration-factory-provider="com.sun.enterprise.security.jacc.provider.SimplePolicyConfigurationFactory"></jacc-provider>
				<audit-module classname="com.sun.enterprise.security.Audit"
					name="default">
					<property name="auditOn" value="false"></property>
				</audit-module>
				<message-security-config auth-layer="SOAP">
					<provider-config provider-type="client"
						provider-id="XWS_ClientProvider" class-name="com.sun.xml.wss.provider.ClientSecurityAuthModule">
						<request-policy auth-source="content"></request-policy>
						<response-policy auth-source="content"></response-policy>
						<property name="encryption.key.alias" value="s1as"></property>
						<property name="signature.key.alias" value="s1as"></property>
						<property name="dynamic.username.password" value="false"></property>
						<property name="debug" value="false"></property>
					</provider-config>
					<provider-config provider-type="client"
						provider-id="ClientProvider" class-name="com.sun.xml.wss.provider.ClientSecurityAuthModule">
						<request-policy auth-source="content"></request-policy>
						<response-policy auth-source="content"></response-policy>
						<property name="encryption.key.alias" value="s1as"></property>
						<property name="signature.key.alias" value="s1as"></property>
						<property name="dynamic.username.password" value="false"></property>
						<property name="debug" value="false"></property>
						<property name="security.config"
							value="${com.sun.aas.instanceRoot}/config/wss-server-config-1.0.xml"></property>
					</provider-config>
					<provider-config provider-type="server"
						provider-id="XWS_ServerProvider" class-name="com.sun.xml.wss.provider.ServerSecurityAuthModule">
						<request-policy auth-source="content"></request-policy>
						<response-policy auth-source="content"></response-policy>
						<property name="encryption.key.alias" value="s1as"></property>
						<property name="signature.key.alias" value="s1as"></property>
						<property name="debug" value="false"></property>
					</provider-config>
					<provider-config provider-type="server"
						provider-id="ServerProvider" class-name="com.sun.xml.wss.provider.ServerSecurityAuthModule">
						<request-policy auth-source="content"></request-policy>
						<response-policy auth-source="content"></response-policy>
						<property name="encryption.key.alias" value="s1as"></property>
						<property name="signature.key.alias" value="s1as"></property>
						<property name="debug" value="false"></property>
						<property name="security.config"
							value="${com.sun.aas.instanceRoot}/config/wss-server-config-1.0.xml"></property>
					</provider-config>
				</message-security-config>
				<message-security-config auth-layer="HttpServlet">
					<provider-config provider-type="server"
						provider-id="GFConsoleAuthModule"
						class-name="org.glassfish.admingui.common.security.AdminConsoleAuthModule">
						<request-policy auth-source="sender"></request-policy>
						<response-policy></response-policy>
						<property name="restAuthURL"
							value="http://localhost:${ADMIN_LISTENER_PORT}/management/sessions"></property>
						<property name="loginPage" value="/login.jsf"></property>
						<property name="loginErrorPage" value="/loginError.jsf"></property>
					</provider-config>
				</message-security-config>
				<property name="default-digest-algorithm" value="SHA-256"></property>
			</security-service>
			<transaction-service tx-log-dir="${com.sun.aas.instanceRoot}/logs"></transaction-service>
			<java-config
				debug-options="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=9009"
				system-classpath="" classpath-suffix="">
				<jvm-options>-server</jvm-options>
				<jvm-options>-Djava.awt.headless=true</jvm-options>
				<jvm-options>-Djavax.management.builder.initial=com.sun.enterprise.v3.admin.AppServerMBeanServerBuilder
				</jvm-options>
				<jvm-options>-XX:+UnlockDiagnosticVMOptions</jvm-options>
				<jvm-options>-Djava.endorsed.dirs=${com.sun.aas.installRoot}/modules/endorsed${path.separator}${com.sun.aas.installRoot}/lib/endorsed
				</jvm-options>
				<jvm-options>-Djava.security.policy=${com.sun.aas.instanceRoot}/config/server.policy
				</jvm-options>
				<jvm-options>-Djava.security.auth.login.config=${com.sun.aas.instanceRoot}/config/login.conf
				</jvm-options>
				<jvm-options>-Dcom.sun.enterprise.security.httpsOutboundKeyAlias=s1as
				</jvm-options>
				<jvm-options>-Xmx512m</jvm-options>
				<jvm-options>-Djavax.net.ssl.keyStore=${com.sun.aas.instanceRoot}/config/keystore.jks
				</jvm-options>
				<jvm-options>-Djavax.net.ssl.trustStore=${com.sun.aas.instanceRoot}/config/cacerts.jks
				</jvm-options>
				<jvm-options>-Djava.ext.dirs=${com.sun.aas.javaRoot}/lib/ext${path.separator}${com.sun.aas.javaRoot}/jre/lib/ext${path.separator}${com.sun.aas.instanceRoot}/lib/ext
				</jvm-options>
				<jvm-options>-Djdbc.drivers=org.apache.derby.jdbc.ClientDriver
				</jvm-options>
				<jvm-options>-DANTLR_USE_DIRECT_CLASS_LOADING=true</jvm-options>
				<jvm-options>-Dcom.sun.enterprise.config.config_environment_factory_class=com.sun.enterprise.config.serverbeans.AppserverConfigEnvironmentFactory
				</jvm-options>
				<jvm-options>-Dosgi.shell.telnet.port=6666</jvm-options>
				<jvm-options>-Dosgi.shell.telnet.maxconn=1</jvm-options>
				<jvm-options>-Dosgi.shell.telnet.ip=127.0.0.1</jvm-options>
				<jvm-options>-Dgosh.args=--nointeractive</jvm-options>
				<jvm-options>-Dfelix.fileinstall.dir=${com.sun.aas.installRoot}/modules/autostart/
				</jvm-options>
				<jvm-options>-Dfelix.fileinstall.poll=5000</jvm-options>
				<jvm-options>-Dfelix.fileinstall.log.level=2</jvm-options>
				<jvm-options>-Dfelix.fileinstall.bundles.new.start=true
				</jvm-options>
				<jvm-options>-Dfelix.fileinstall.bundles.startTransient=true
				</jvm-options>
				<jvm-options>-Dfelix.fileinstall.disableConfigSave=false
				</jvm-options>
				<jvm-options>-XX:NewRatio=2</jvm-options>
				<jvm-options>-Dcom.sun.grizzly.util.buf.UDecoder.ALLOW_ENCODED_SLASH=TRUE
				</jvm-options>
				<jvm-options>-Djava.security.auth.login.config=${com.sun.aas.instanceRoot}/config/login.conf</jvm-options>
			</java-config>
			<network-config>
				<protocols>
					<protocol name="http-listener-1">
						<http request-timeout-seconds="-1" default-virtual-server="server"
							max-connections="250" encoded-slash-enabled="true">
							<file-cache></file-cache>
						</http>
					</protocol>
					<protocol security-enabled="true" name="http-listener-2">
						<http default-virtual-server="server" max-connections="250"
							encoded-slash-enabled="true">
							<file-cache></file-cache>
						</http>
						<ssl classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl"
							cert-nickname="s1as"></ssl>
					</protocol>
					<protocol name="admin-listener">
						<http default-virtual-server="__asadmin" max-connections="250"
							encoded-slash-enabled="true">
							<file-cache></file-cache>
						</http>
					</protocol>
					<protocol security-enabled="true" name="sec-admin-listener">
						<http default-virtual-server="__asadmin"
							encoded-slash-enabled="true">
							<file-cache></file-cache>
						</http>
						<ssl client-auth="want"
							classname="com.sun.enterprise.security.ssl.GlassfishSSLImpl"
							cert-nickname="s1as"></ssl>
					</protocol>
					<protocol name="admin-http-redirect">
						<http-redirect secure="true"></http-redirect>
					</protocol>
					<protocol name="pu-protocol">
						<port-unification>
							<protocol-finder protocol="sec-admin-listener"
								name="http-finder" classname="com.sun.grizzly.config.HttpProtocolFinder"></protocol-finder>
							<protocol-finder protocol="admin-http-redirect"
								name="admin-http-redirect" classname="com.sun.grizzly.config.HttpProtocolFinder"></protocol-finder>
						</port-unification>
					</protocol>
				</protocols>
				<network-listeners>
					<network-listener port="8080" protocol="http-listener-1"
						transport="tcp" name="http-listener-1" thread-pool="http-thread-pool"></network-listener>
					<network-listener port="8181" protocol="http-listener-2"
						transport="tcp" name="http-listener-2" thread-pool="http-thread-pool"></network-listener>
					<network-listener port="4848" protocol="pu-protocol"
						transport="tcp" name="admin-lis	tener" thread-pool="admin-thread-pool"></network-listener>
				</network-listeners>
				<transports>
					<transport name="tcp"></transport>
				</transports>
			</network-config>
			<thread-pools>
				<thread-pool name="admin-thread-pool"
					max-thread-pool-size="50" max-queue-size="256"></thread-pool>
				<thread-pool name="http-thread-pool"></thread-pool>
				<thread-pool name="thread-pool-1" max-thread-pool-size="200"></thread-pool>
			</thread-pools>
			<monitoring-service>
				<module-monitoring-levels></module-monitoring-levels>
			</monitoring-service>
			<group-management-service>
				<failure-detection></failure-detection>
			</group-management-service>
		</config>
	</configs>
	<property name="administrative.domain.name" value="hascode"></property>
	<secure-admin enabled="true"
		special-admin-indicator="c9d351be-8465-4183-9bf6-83fa8b60d8f5">
		<secure-admin-principal
			dn="CN=hascode.com,OU=GlassFish,O=Oracle Corporation,L=Santa Clara,ST=California,C=US"></secure-admin-principal>
		<secure-admin-principal
			dn="CN=hascode.com-instance,OU=GlassFish,O=Oracle Corporation,L=Santa Clara,ST=California,C=US"></secure-admin-principal>
	</secure-admin>
	<load-balancers></load-balancers>
	<lb-configs></lb-configs>
	<clusters></clusters>
</domain>
